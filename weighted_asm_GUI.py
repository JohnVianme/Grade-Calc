# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'weighted_asm_GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QTimer


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1433, 787)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Add_Asm_Button = QtWidgets.QPushButton(self.centralwidget)
        self.Add_Asm_Button.setGeometry(QtCore.QRect(270, 350, 113, 32))
        self.Add_Asm_Button.setObjectName("Add_Asm_Button")
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setGeometry(QtCore.QRect(10, 10, 641, 331))
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 639, 329))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.tableWidget = QtWidgets.QTableWidget(self.scrollAreaWidgetContents)
        self.tableWidget.setGeometry(QtCore.QRect(0, 0, 631, 311))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(4)
        self.tableWidget.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        # all rows start with zero as the value
        self.tableWidget.setItem(0, 0, QtWidgets.QTableWidgetItem("0"))
        self.tableWidget.setItem(0, 1, QtWidgets.QTableWidgetItem("0"))
        self.tableWidget.setItem(0, 2, QtWidgets.QTableWidgetItem("0"))
        self.tableWidget.setItem(0, 3, QtWidgets.QTableWidgetItem("0"))
        self.tableWidget.setHorizontalHeaderItem(3, item)
        self.tableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.tableWidget.verticalHeader().setDefaultSectionSize(40)
        self.tableWidget.verticalHeader().setMinimumSectionSize(60)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.calc_grade_button = QtWidgets.QPushButton(self.centralwidget)
        self.calc_grade_button.setGeometry(QtCore.QRect(260, 430, 131, 31))
        self.calc_grade_button.setObjectName("calc_grade_button")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1433, 24))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.retranslateUi(MainWindow)

        # When add assignment buttons is pressed, add a row on table for an assignmet
        self.Add_Asm_Button.clicked.connect(self.add_row_to_table)
        # When add calculate grade button is pressed, create assignmets and
        self.calc_grade_button.clicked.connect(self.grade_assignmets)

        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Add_Asm_Button.setText(_translate("MainWindow", "Add Assignment"))
        item = self.tableWidget.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Weight"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Points Earned"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Points Total"))
        self.calc_grade_button.setText(_translate("MainWindow", "Calculate Grade"))

    def add_row_to_table(self):
        rowCount = self.tableWidget.rowCount()
        self.tableWidget.insertRow(rowCount)
        self.tableWidget.setItem(rowCount, 0, QtWidgets.QTableWidgetItem("0"))
        self.tableWidget.setItem(rowCount, 1, QtWidgets.QTableWidgetItem("0"))
        self.tableWidget.setItem(rowCount, 2, QtWidgets.QTableWidgetItem("0"))
        self.tableWidget.setItem(rowCount, 3, QtWidgets.QTableWidgetItem("0"))
        # set focus back on table
        self.tableWidget.setFocus()

    """
    This fuction prints each column and row in the table of asm
    """

    def print_item(self):
        print(self.get_item_at(0, 0))

    """
    This function returns the contents of the value at x, y (row,col) from the 
    tableWidget.
    """

    def get_item_at(self, x, y):
        return self.tableWidget.item(x, y)

    """
    This function prints out all the rows and columns of the table of 
    assignments
    """

    def print_table(self):
        self.deselect_table()
        rows = self.tableWidget.rowCount()
        cols = self.tableWidget.columnCount()
        for row in range(rows):
            aRow = ""
            for col in range(cols):
                not_empty_item = self.get_item_at(row, col)
                if not_empty_item:
                    aRow += not_empty_item.text() + " "
            print(aRow)

    """
    This function makes it so the table is updated and not selected so other
    method using the method have the most up to date table.
    """

    def deselect_table(self):
        self.tableWidget.viewport().update()
        self.tableWidget.clearFocus()
        self.scrollArea.viewport().clearFocus()
        self.tableWidget.setFocus()

    """
    This fuction creates weighted assignmets object based on GUI inputs and grades the assignmets 
    """

    def grade_assignmets(self):
        self.print_table()
        # final list assignmet
        assignmets = []
        # loop and make assignmet objects
        self.deselect_table()
        rows = self.tableWidget.rowCount()
        cols = self.tableWidget.columnCount()
        for row in range(rows):
            # list for holding, name, weight, points earned, and posssible points
            an_asm_data = []
            for col in range(cols):
                not_empty_item = self.get_item_at(row, col)
                if not_empty_item:
                    an_asm_data.append(not_empty_item.text())
            name = an_asm_data[0]
            weight = an_asm_data[1]
            points_earned = an_asm_data[2]
            possible_possible = an_asm_data[3]
            # create an assignmet object
            an_asm = self.make_assignmet(name, weight, points_earned, possible_possible)
            # add assignemt to list of assignmet
            assignmets.append(an_asm)

    def make_assignmet(name, weight, points_earned, possible_possible):
        pass


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
